# To use Google Cloud SQL database:
# 1. GOOGLE_CLOUD_CREDENTIALS env variable must be set to private key (json file) downloaded from GCP !!!
# 2. Host public IP MUST BE ADDED to Google Cloud Instance Public IP whitelist

spring.application.name=Training Platform
server.port = 9000

#Uncomment the following for local database usage (MySQL 8)
#spring.datasource.url=jdbc:mysql://localhost:3306/training_platform?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=root
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

logging.level.root=INFO 
logging.level.com.journaler.api=DEBUG 
logging.level.org.springframework.jdbc=ERROR 

spring.datasource.tomcat.test-on-borrow=true 
spring.datasource.tomcat.validation-interval=30000 
spring.datasource.tomcat.validation-query=SELECT 1 
spring.datasource.tomcat.remove-abandoned=true 
spring.datasource.tomcat.remove-abandoned-timeout=10000 
spring.datasource.tomcat.log-abandoned=true 
spring.datasource.tomcat.max-age=1800000 
spring.datasource.tomcat.log-validation-errors=true 
spring.datasource.tomcat.max-active=50 
spring.datasource.tomcat.max-idle=10 
spring.jpa.hibernate.ddl-auto=update 

#Following for GCP CloudSQL database connection (MySQL 5.7)
spring.datasource.username=root
spring.datasource.password=robertwojcik
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL57Dialect

# In the last line, add mysql to the spring.profiles.active property
spring.profiles.active=mysql

